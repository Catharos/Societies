/**
 * This class is generated by jOOQ
 */
package org.societies.database.sql.layout.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CitiesLandsRecord extends org.jooq.impl.UpdatableRecordImpl<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> implements org.jooq.Record2<byte[], byte[]> {

	private static final long serialVersionUID = -984624694;

	/**
	 * Setter for <code>societies.cities_lands.cities_uuid</code>.
	 */
	public void setCitiesUuid(byte[] value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>societies.cities_lands.cities_uuid</code>.
	 */
	public byte[] getCitiesUuid() {
		return (byte[]) getValue(0);
	}

	/**
	 * Setter for <code>societies.cities_lands.lands_uuid</code>.
	 */
	public void setLandsUuid(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>societies.cities_lands.lands_uuid</code>.
	 */
	public byte[] getLandsUuid() {
		return (byte[]) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<byte[], byte[]> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<byte[], byte[]> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<byte[], byte[]> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field1() {
		return org.societies.database.sql.layout.tables.CitiesLands.CITIES_LANDS.CITIES_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field2() {
		return org.societies.database.sql.layout.tables.CitiesLands.CITIES_LANDS.LANDS_UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value1() {
		return getCitiesUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getLandsUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesLandsRecord value1(byte[] value) {
		setCitiesUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesLandsRecord value2(byte[] value) {
		setLandsUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesLandsRecord values(byte[] value1, byte[] value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CitiesLandsRecord
	 */
	public CitiesLandsRecord() {
		super(org.societies.database.sql.layout.tables.CitiesLands.CITIES_LANDS);
	}

	/**
	 * Create a detached, initialised CitiesLandsRecord
	 */
	public CitiesLandsRecord(byte[] citiesUuid, byte[] landsUuid) {
		super(org.societies.database.sql.layout.tables.CitiesLands.CITIES_LANDS);

		setValue(0, citiesUuid);
		setValue(1, landsUuid);
	}
}
