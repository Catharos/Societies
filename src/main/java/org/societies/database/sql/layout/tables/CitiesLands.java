/**
 * This class is generated by jOOQ
 */
package org.societies.database.sql.layout.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CitiesLands extends org.jooq.impl.TableImpl<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> {

	private static final long serialVersionUID = 1781048558;

	/**
	 * The singleton instance of <code>societies.cities_lands</code>
	 */
	public static final org.societies.database.sql.layout.tables.CitiesLands CITIES_LANDS = new org.societies.database.sql.layout.tables.CitiesLands();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> getRecordType() {
		return org.societies.database.sql.layout.tables.records.CitiesLandsRecord.class;
	}

	/**
	 * The column <code>societies.cities_lands.cities_uuid</code>.
	 */
	public final org.jooq.TableField<org.societies.database.sql.layout.tables.records.CitiesLandsRecord, byte[]> CITIES_UUID = createField("cities_uuid", org.jooq.impl.SQLDataType.VARBINARY.length(16).nullable(false), this, "");

	/**
	 * The column <code>societies.cities_lands.lands_uuid</code>.
	 */
	public final org.jooq.TableField<org.societies.database.sql.layout.tables.records.CitiesLandsRecord, byte[]> LANDS_UUID = createField("lands_uuid", org.jooq.impl.SQLDataType.VARBINARY.length(16).nullable(false), this, "");

	/**
	 * Create a <code>societies.cities_lands</code> table reference
	 */
	public CitiesLands() {
		this("cities_lands", null);
	}

	/**
	 * Create an aliased <code>societies.cities_lands</code> table reference
	 */
	public CitiesLands(java.lang.String alias) {
		this(alias, org.societies.database.sql.layout.tables.CitiesLands.CITIES_LANDS);
	}

	private CitiesLands(java.lang.String alias, org.jooq.Table<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> aliased) {
		this(alias, aliased, null);
	}

	private CitiesLands(java.lang.String alias, org.jooq.Table<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.societies.database.sql.layout.Societies.SOCIETIES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.societies.database.sql.layout.tables.records.CitiesLandsRecord> getPrimaryKey() {
		return org.societies.database.sql.layout.Keys.KEY_CITIES_LANDS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.societies.database.sql.layout.tables.records.CitiesLandsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.societies.database.sql.layout.tables.records.CitiesLandsRecord>>asList(org.societies.database.sql.layout.Keys.KEY_CITIES_LANDS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.societies.database.sql.layout.tables.records.CitiesLandsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.societies.database.sql.layout.tables.records.CitiesLandsRecord, ?>>asList(org.societies.database.sql.layout.Keys.FK_CITIES_HAS_LANDS_CITIES1, org.societies.database.sql.layout.Keys.FK_CITIES_HAS_LANDS_LANDS1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.societies.database.sql.layout.tables.CitiesLands as(java.lang.String alias) {
		return new org.societies.database.sql.layout.tables.CitiesLands(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.societies.database.sql.layout.tables.CitiesLands rename(java.lang.String name) {
		return new org.societies.database.sql.layout.tables.CitiesLands(name, null);
	}
}
