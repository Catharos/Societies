/**
 * This class is generated by jOOQ
 */
package org.societies.database.sql.layout.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelationsRecord extends org.jooq.impl.UpdatableRecordImpl<org.societies.database.sql.layout.tables.records.RelationsRecord> implements org.jooq.Record3<byte[], byte[], java.lang.Short> {

	private static final long serialVersionUID = 419086996;

	/**
	 * Setter for <code>societies.relations.society</code>.
	 */
	public void setSociety(byte[] value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>societies.relations.society</code>.
	 */
	public byte[] getSociety() {
		return (byte[]) getValue(0);
	}

	/**
	 * Setter for <code>societies.relations.society2</code>.
	 */
	public void setSociety2(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>societies.relations.society2</code>.
	 */
	public byte[] getSociety2() {
		return (byte[]) getValue(1);
	}

	/**
	 * Setter for <code>societies.relations.type</code>.
	 */
	public void setType(java.lang.Short value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>societies.relations.type</code>.
	 */
	public java.lang.Short getType() {
		return (java.lang.Short) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<byte[], byte[]> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<byte[], byte[], java.lang.Short> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<byte[], byte[], java.lang.Short> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field1() {
		return org.societies.database.sql.layout.tables.Relations.RELATIONS.SOCIETY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field2() {
		return org.societies.database.sql.layout.tables.Relations.RELATIONS.SOCIETY2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field3() {
		return org.societies.database.sql.layout.tables.Relations.RELATIONS.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value1() {
		return getSociety();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getSociety2();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RelationsRecord value1(byte[] value) {
		setSociety(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RelationsRecord value2(byte[] value) {
		setSociety2(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RelationsRecord value3(java.lang.Short value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RelationsRecord values(byte[] value1, byte[] value2, java.lang.Short value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RelationsRecord
	 */
	public RelationsRecord() {
		super(org.societies.database.sql.layout.tables.Relations.RELATIONS);
	}

	/**
	 * Create a detached, initialised RelationsRecord
	 */
	public RelationsRecord(byte[] society, byte[] society2, java.lang.Short type) {
		super(org.societies.database.sql.layout.tables.Relations.RELATIONS);

		setValue(0, society);
		setValue(1, society2);
		setValue(2, type);
	}
}
