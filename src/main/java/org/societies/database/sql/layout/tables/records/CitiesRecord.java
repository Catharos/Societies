/**
 * This class is generated by jOOQ
 */
package org.societies.database.sql.layout.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.4" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CitiesRecord extends org.jooq.impl.UpdatableRecordImpl<org.societies.database.sql.layout.tables.records.CitiesRecord> implements org.jooq.Record5<byte[], byte[], java.lang.Short, java.lang.Short, java.lang.Short> {

	private static final long serialVersionUID = -1243809789;

	/**
	 * Setter for <code>societies.cities.uuid</code>.
	 */
	public void setUuid(byte[] value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>societies.cities.uuid</code>.
	 */
	public byte[] getUuid() {
		return (byte[]) getValue(0);
	}

	/**
	 * Setter for <code>societies.cities.society</code>.
	 */
	public void setSociety(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>societies.cities.society</code>.
	 */
	public byte[] getSociety() {
		return (byte[]) getValue(1);
	}

	/**
	 * Setter for <code>societies.cities.x</code>.
	 */
	public void setX(java.lang.Short value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>societies.cities.x</code>.
	 */
	public java.lang.Short getX() {
		return (java.lang.Short) getValue(2);
	}

	/**
	 * Setter for <code>societies.cities.y</code>.
	 */
	public void setY(java.lang.Short value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>societies.cities.y</code>.
	 */
	public java.lang.Short getY() {
		return (java.lang.Short) getValue(3);
	}

	/**
	 * Setter for <code>societies.cities.z</code>.
	 */
	public void setZ(java.lang.Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>societies.cities.z</code>.
	 */
	public java.lang.Short getZ() {
		return (java.lang.Short) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record2<byte[], byte[]> key() {
		return (org.jooq.Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<byte[], byte[], java.lang.Short, java.lang.Short, java.lang.Short> fieldsRow() {
		return (org.jooq.Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row5<byte[], byte[], java.lang.Short, java.lang.Short, java.lang.Short> valuesRow() {
		return (org.jooq.Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field1() {
		return org.societies.database.sql.layout.tables.Cities.CITIES.UUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field2() {
		return org.societies.database.sql.layout.tables.Cities.CITIES.SOCIETY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field3() {
		return org.societies.database.sql.layout.tables.Cities.CITIES.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field4() {
		return org.societies.database.sql.layout.tables.Cities.CITIES.Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field5() {
		return org.societies.database.sql.layout.tables.Cities.CITIES.Z;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value1() {
		return getUuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getSociety();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value3() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value4() {
		return getY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value5() {
		return getZ();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord value1(byte[] value) {
		setUuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord value2(byte[] value) {
		setSociety(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord value3(java.lang.Short value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord value4(java.lang.Short value) {
		setY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord value5(java.lang.Short value) {
		setZ(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CitiesRecord values(byte[] value1, byte[] value2, java.lang.Short value3, java.lang.Short value4, java.lang.Short value5) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CitiesRecord
	 */
	public CitiesRecord() {
		super(org.societies.database.sql.layout.tables.Cities.CITIES);
	}

	/**
	 * Create a detached, initialised CitiesRecord
	 */
	public CitiesRecord(byte[] uuid, byte[] society, java.lang.Short x, java.lang.Short y, java.lang.Short z) {
		super(org.societies.database.sql.layout.tables.Cities.CITIES);

		setValue(0, uuid);
		setValue(1, society);
		setValue(2, x);
		setValue(3, y);
		setValue(4, z);
	}
}
