Settings serialisation:
    * Setting by UUID
	* Subject/Target by UUID
	* SettingValue by binary
	Targets:
		- Ranks
		- Groups (with relations)

Finish requests

Publishers also for creating/dropping societies?

Rank permissions

Basic functionality:
    Update groups and members

Commands:
	X Group create
	X Group list

	X Profile group

	X Invite player
	X Join group
	X Leave group
	Kick player
	Cancel requests


	Rank create
	Rank remove
	Rank list

	Relation create
	Relation remove
	Relation list

Supported databases:
	* MySQL
	* cqengine with json

Storage:
	* In database
	* JSON backups

Text renderer
	X Pad complete table x chars to the right
	X Headings
	* Separators
	X Tables
	* Tree like structure

Commands:
X    Pagination for command output
	 Pre check sender class (Configuration over annotations)

Relocated class jars (guava)

Use a LocaleWrapper to match locales and dictionaries or just use the language attributes

Get player name from external source if player is offline and there is no "offline player data"

X Translations

Caching
	* Pre-rendered listing output

Guice factory to pools, setup UncaughtExceptionHandler

Cosmetics:
    Design of Setting and Relation?

Document:
    Commands
    Request
    Rank
    Bukkit api in societies


History
Statistics
