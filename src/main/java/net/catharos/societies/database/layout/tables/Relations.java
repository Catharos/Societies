/**
 * This class is generated by jOOQ
 */
package net.catharos.societies.database.layout.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.2.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Relations extends org.jooq.impl.TableImpl<net.catharos.societies.database.layout.tables.records.RelationsRecord> {

	private static final long serialVersionUID = 412784493;

	/**
	 * The singleton instance of <code>societies.relations</code>
	 */
	public static final net.catharos.societies.database.layout.tables.Relations RELATIONS = new net.catharos.societies.database.layout.tables.Relations();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<net.catharos.societies.database.layout.tables.records.RelationsRecord> getRecordType() {
		return net.catharos.societies.database.layout.tables.records.RelationsRecord.class;
	}

	/**
	 * The column <code>societies.relations.society</code>. 
	 */
	public final org.jooq.TableField<net.catharos.societies.database.layout.tables.records.RelationsRecord, byte[]> SOCIETY = createField("society", org.jooq.impl.SQLDataType.VARBINARY.length(16).nullable(false), this);

	/**
	 * The column <code>societies.relations.society2</code>. 
	 */
	public final org.jooq.TableField<net.catharos.societies.database.layout.tables.records.RelationsRecord, byte[]> SOCIETY2 = createField("society2", org.jooq.impl.SQLDataType.VARBINARY.length(16).nullable(false), this);

	/**
	 * The column <code>societies.relations.type</code>. 
	 */
	public final org.jooq.TableField<net.catharos.societies.database.layout.tables.records.RelationsRecord, java.lang.Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this);

	/**
	 * Create a <code>societies.relations</code> table reference
	 */
	public Relations() {
		super("relations", net.catharos.societies.database.layout.Societies.SOCIETIES);
	}

	/**
	 * Create an aliased <code>societies.relations</code> table reference
	 */
	public Relations(java.lang.String alias) {
		super(alias, net.catharos.societies.database.layout.Societies.SOCIETIES, net.catharos.societies.database.layout.tables.Relations.RELATIONS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<net.catharos.societies.database.layout.tables.records.RelationsRecord> getPrimaryKey() {
		return net.catharos.societies.database.layout.Keys.KEY_RELATIONS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<net.catharos.societies.database.layout.tables.records.RelationsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<net.catharos.societies.database.layout.tables.records.RelationsRecord>>asList(net.catharos.societies.database.layout.Keys.KEY_RELATIONS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<net.catharos.societies.database.layout.tables.records.RelationsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<net.catharos.societies.database.layout.tables.records.RelationsRecord, ?>>asList(net.catharos.societies.database.layout.Keys.FK_SOCIETIES_HAS_SOCIETIES_SOCIETIES1, net.catharos.societies.database.layout.Keys.FK_SOCIETIES_HAS_SOCIETIES_SOCIETIES2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public net.catharos.societies.database.layout.tables.Relations as(java.lang.String alias) {
		return new net.catharos.societies.database.layout.tables.Relations(alias);
	}
}
